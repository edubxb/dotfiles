[user]
	name = Eduardo Bellido Bellido
	userConfigOnly = true
[init]
	defaultBranch = main
	templatedir = ~/.config/git/template/
[core]
	excludesfile = ~/.config/git/ignore
	pager = delta
[pull]
	rebase = true
[push]
	autoSetupRemote = true
	default = simple
[commit]
	verbose = true
[rebase]
	autoSquash = true
[rerere]
	enabled = true
[diff]
	algorithm = histogram
	colorMoved = default
	indentHeuristic = true
	noprefix = true
	tool = vimdiff
[difftool]
	prompt = false
[difftool "vimdiff"]
	cmd = nvim-gtk --no-fork -- -d \"${LOCAL}\" \"${REMOTE}\"
[difftool "cdiff"]
	cmd = cdiff --side-by-side --width=0 --color=auto \"${LOCAL}\" \"${REMOTE}\"
[difftool "icdiff"]
	cmd = icdiff -N -H --is-git-diff --tabsize=4 \"${LOCAL}\" \"${REMOTE}\" | ${PAGER}
[difftool "difftastic"]
	cmd = difft \"$LOCAL\" \"$REMOTE\"
[merge]
	conflictStyle = zdiff3
	tool = fugitive
[mergetool]
	keepBackup = false
	prompt = false
[mergetool "vimdiff"]
	cmd = nvim-gtk --no-fork -- -d \"${BASE}\" \"${LOCAL}\" \"${REMOTE}\" \"${MERGED}\"
[mergetool "fugitive"]
	cmd = nvim-gtk --no-fork -- -c Gvdiffsplit! \"$MERGED\"
[delta]
	features = side-by-side line-numbers
	hyperlinks = true
	navigate = true
[interactive]
	diffFilter = delta --color-only
[log]
	date = format:%F %R
[pretty]
	simpleline = %C(bold)%m %h%Creset %C(cyan)%ad %Creset%s
[alias]
	aliases = config --get-regexp alias
	amend = commit --amend --reuse-message=HEAD
	blobs = "!git rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | grep blob | cut -d ' ' -f3- | sort -nr | numfmt --to=iec-i --suffix=B --padding=7 --round=nearest"
	bup = "!f() { local ref=\"$(git default-branch)\"; [ -n \"$1\" ] && ref=\"$1\"; { git fetch; git stash push --include-untracked; git switch ${ref}; git pull --rebase; } && { git switch -; git rebase ${ref}; git stash pop --index; } }; f"
	cdiff = difftool --tool cdiff
	default-branch = "!git remote show origin | grep HEAD | cut -d' ' -f5"
	diffm = "!git diff $(git default-branch)"
	diffu = diff @{u}
	fixup = commit --fixup=HEAD
	ls-ignored = ls-files --others --ignored --exclude-standard
	puf = push --force-with-lease
	rebaseme = "!f() { local ref=\"$(git default-branch)\"; [ -n \"$1\" ] && ref=\"$1\"; git rebase --autosquash -i $(git merge-base \"${ref}\" HEAD); }; f"
	shame = blame -w -M
	squash = commit --squash=HEAD
	stash-all = stash push --include-untracked
	trl = "!git reflog --all --pretty=raw | tig --pretty=raw"
	ups = "!f() { local remote=\"origin\"; [ -n \"$1\" ] && remote=\"$1\"; git push -u \"${remote}\" $(git rev-parse --abbrev-ref HEAD); }; f"
	wip = "!f() { git commit -m \"WIP: $*\"; }; f"
[color "branch"]
	current = 229 bold
	local = 229
	remote = normal
[color "grep"]
	match = 11 bold
[color "interactive"]
	error = normal
	header = normal bold
	help = normal
	prompt = normal bold
[color "status"]
	branch = 229 bold
	changed = 98
	nobranch = 229 bold
[filter "lfs"]
	clean = git-lfs clean -- %f
	process = git-lfs filter-process
	required = true
	smudge = git-lfs smudge -- %f
[include]
	path = ~/.config/git/config.personal
[includeIf "gitdir:~/Area51/work/"]
	path = ~/.config/git/config.work
